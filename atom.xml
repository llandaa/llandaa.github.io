<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>landaBlog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-12-13T15:07:34.038Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>landa</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2016/12/13/html%E7%AF%87/"/>
    <id>http://yoursite.com/2016/12/13/html篇/</id>
    <published>2016-12-13T12:49:19.471Z</published>
    <updated>2016-12-13T15:07:34.038Z</updated>
    
    <content type="html"><![CDATA[<hr>
<p>title: html篇<br>date: 2016-12-13 20:49:19<br>tags:</p>
<h2 id="html基础篇"><a href="#html基础篇" class="headerlink" title="html基础篇"></a>html基础篇</h2><p>1.浏览器的内核</p>
<ul>
<li>IE : trident内核</li>
<li>Firefox : gecko内核</li>
<li>Safair : webkit内核</li>
<li>opera : 以前是presto内核，现在是Google的Blink内核</li>
<li>chrome : Blink内核</li>
</ul>
<p>2.div+css布局和table布局有什么优点</p>
<ul>
<li>改版的时候更加方便，只要改css文件即可</li>
<li>页面加载速度更快，结构化清晰，页面显示简洁</li>
<li>表现与结构相分离</li>
<li>易于优化，搜索引擎更友好，排名更容易靠前</li>
</ul>
<p>3.a.img的alt和title</p>
<ul>
<li>alt(alt text):为不能显示图像、窗体或applets的用户代理（UA），alt属性用来指定替换文字。替换文字的语言由lang属性指定。(在IE浏览器下会在没有title时把alt当成 tool tip显示)</li>
<li>title(tool tip):该属性为设置该属性的元素提供建议性的信息。</li>
</ul>
<p>4.渐进增强和优雅降级之间的区别</p>
<ul>
<li>渐进增强 progressive enhancement：针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。</li>
<li>优雅降级 graceful degradation：一开始就构建完整的功能，然后再针对低版本浏览器进行兼容。</li>
</ul>
<p>5.为什么利用多个域名来存储网站资源会更有效？</p>
<ul>
<li>CDN缓存更方便</li>
<li>突破浏览器并发限制</li>
<li>节约Cookie带宽</li>
<li>节约主域名的连接数，优化页面响应速度</li>
<li>防止不必要的安全问题<a id="more"></a>
6.cookies，sessionStorage和localStorage的区别？<br>sessionStorage用于本地存储一个会话（session）中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储。而localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。<br>web storage和cookie的区别</li>
<li>Web Storage的概念和cookie相似，区别是它是为了更大容量存储设计的。Cookie的大小是受限的，并且每次你请求一个新的页面的时候Cookie都会被发送过去，这样无形中浪费了带宽，另外cookie还需要指定作用域，不可以跨域调用。</li>
<li>除此之外，Web Storage拥有setItem,getItem,removeItem,clear等方法，不像cookie需要前端开发者自己封装setCookie，getCookie。但是Cookie也是不可以或缺的：Cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在 ，而Web Storage仅仅是为了在本地“存储”数据而生。</li>
</ul>
<p>7.src和href的区别？<br>src用于替换当前元素，href用于在当前文档和引用资源之间确立联系。</p>
<p>src是source的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。</p>
<script src="”js.js”"></script>

<p>当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。</p>
<p>href是Hypertext Reference的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，如果我们在文档中添加</p>
<link href="”common.css”" rel="”stylesheet”/">

<p>那么浏览器会识别该文档为css文件，就会并行下载资源并且不会停止对当前文档的处理。这也是为什么建议使用link方式来加载css，而不是使用@import方式。<br>8.网页制作用到的图片格式：png-8，png-24,jgeg,gif,svg,webp</p>
<p>9.微格式：是一种让机器可读的语义化XHTML词汇的集合，是结构化数据的开放标准。是为特殊应用而制定的特殊格式。</p>
<p>10.在css/js代码上线之后开发人员经常会优化性能，从用户刷新网页开始，一次js请求一般情况下有哪些地方会有缓存处理？<br>    dns缓存，cdn缓存，浏览器缓存，服务器缓存</p>
<p>11.优化图片加载</p>
<ul>
<li>图片懒加载</li>
<li>图片预加载技术</li>
<li>雪碧图，base64，iconfont，SVGSprite</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;title: html篇&lt;br&gt;date: 2016-12-13 20:49:19&lt;br&gt;tags:&lt;/p&gt;
&lt;h2 id=&quot;html基础篇&quot;&gt;&lt;a href=&quot;#html基础篇&quot; class=&quot;headerlink&quot; title=&quot;html基础篇&quot;&gt;&lt;/a&gt;html基础篇&lt;/h2&gt;&lt;p&gt;1.浏览器的内核&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IE : trident内核&lt;/li&gt;
&lt;li&gt;Firefox : gecko内核&lt;/li&gt;
&lt;li&gt;Safair : webkit内核&lt;/li&gt;
&lt;li&gt;opera : 以前是presto内核，现在是Google的Blink内核&lt;/li&gt;
&lt;li&gt;chrome : Blink内核&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.div+css布局和table布局有什么优点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改版的时候更加方便，只要改css文件即可&lt;/li&gt;
&lt;li&gt;页面加载速度更快，结构化清晰，页面显示简洁&lt;/li&gt;
&lt;li&gt;表现与结构相分离&lt;/li&gt;
&lt;li&gt;易于优化，搜索引擎更友好，排名更容易靠前&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.a.img的alt和title&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;alt(alt text):为不能显示图像、窗体或applets的用户代理（UA），alt属性用来指定替换文字。替换文字的语言由lang属性指定。(在IE浏览器下会在没有title时把alt当成 tool tip显示)&lt;/li&gt;
&lt;li&gt;title(tool tip):该属性为设置该属性的元素提供建议性的信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4.渐进增强和优雅降级之间的区别&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;渐进增强 progressive enhancement：针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。&lt;/li&gt;
&lt;li&gt;优雅降级 graceful degradation：一开始就构建完整的功能，然后再针对低版本浏览器进行兼容。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;5.为什么利用多个域名来存储网站资源会更有效？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CDN缓存更方便&lt;/li&gt;
&lt;li&gt;突破浏览器并发限制&lt;/li&gt;
&lt;li&gt;节约Cookie带宽&lt;/li&gt;
&lt;li&gt;节约主域名的连接数，优化页面响应速度&lt;/li&gt;
&lt;li&gt;防止不必要的安全问题
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>js篇</title>
    <link href="http://yoursite.com/2016/12/03/js%E9%9D%A2%E8%AF%95%E7%AF%87/"/>
    <id>http://yoursite.com/2016/12/03/js面试篇/</id>
    <published>2016-12-03T04:47:23.000Z</published>
    <updated>2016-12-13T12:48:01.657Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初级Javascript："><a href="#初级Javascript：" class="headerlink" title="初级Javascript："></a>初级Javascript：</h2><p>1.JavaScript是一种什么样的语言，它有哪些特点？<br>  没有标准答案。<br>  示例答案：JavaScript 是一种脚本语言，官方名称为 ECMAScript（因定义语言的标准为 ECMA-262）。JS 的主要特点：1. 语法类似于常见的高级语言，如 C 和 Java；2. 脚本语言，不需要编译就可以由解释器直接运行；3. 变量松散定义，属于弱类型语言；4. 面向对象的。<br>JS 最初是为网页设计而开发的，现在也是 Web 开发的重要语言。它支持对浏览器（浏览器对象模型，BOM）和 HTML 文档（文档对象模型，DOM）进行操作，而使网页呈现动态的交互特性。<br>严格的说，JS 只是 ECMAScript 的一种实现，是 ECMAScript 和 BOM、DOM 组成的一种 Web 开发技术。</p>
<p>2.JavaScript的数据类型都有什么？<br>    基本数据类型：String,boolean,Number,Undefined, Null<br>    引用数据类型：Object(Array,Date,RegExp,Function)<br>    那么问题来了，如何判断某变量是否为数组数据类型？</p>
<ul>
<li>方法一.判断其是否具有“数组性质”，如slice()方法。可自己给该变量定义slice方法，故有时会失效</li>
<li>方法二.obj instanceof Array 在某些IE版本中不正确</li>
<li>方法三.方法一二皆有漏洞，在ECMA Script5中定义了新方法Array.isArray(), 保证其兼容性，最好的方法如下：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">if(typeof Array.isArray===&quot;undefined&quot;) </div><div class="line">&#123; </div><div class="line">  Array.isArray = function(arg)&#123; </div><div class="line">		return Object.prototype.toString.call(arg)===&quot;[object Array]&quot; </div><div class="line">	&#125;;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<p>3.已知ID的Input输入框，希望获取这个输入框的输入值，怎么做？(不使用第三方框架)<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.getElementById(“ID”).value</div></pre></td></tr></table></figure></p>
<p>4.希望获取到页面中所有的checkbox怎么做？(不使用第三方框架)<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var iptList = document.getElementsByTagName(&apos;input&apos;)</div><div class="line">var checkList = [];</div><div class="line">var len = iptList.length;</div><div class="line">when (len--)&#123;</div><div class="line">	if(iptList[len].type == &apos;checkbox&apos;)&#123;</div><div class="line">		checkList.push(iptList[len])</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>5.设置一个已知ID的DIV的html内容为xxxx，字体颜色设置为黑色(不使用第三方框架)<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var dom = document.getElementById(“ID”);</div><div class="line">dom.innerHTML = “xxxx”</div><div class="line">dom.style.color = “#000”</div></pre></td></tr></table></figure></p>
<p>6.当一个DOM节点被点击时候，我们希望能够执行一个函数，应该怎么做？</p>
<ul>
<li>直接在DOM里绑定事件：<div onclick="”test()”"></div></li>
<li>在JS里通过onclick绑定：xxx.onclick = function()</li>
<li>通过事件添加进行绑定：xxx.addEventListener(‘click’,function(){})<br>那么问题来了，Javascript的事件流模型都有什么？</li>
<li>“事件冒泡” ： 事件开始由具体的元素接受，然后逐级向上传播</li>
<li>“事件捕捉” ： 事件由最不具体的节点接受，然后逐级向下，一直到最具体的</li>
<li>“DOM事件流” ： 三个阶段 ： 事件捕捉 目标阶段 事件冒泡</li>
</ul>
<p>7.什么是Ajax和JSON，它们的优缺点。<br>     Ajax是异步JavaScript和XML，用于在web页面中实现异步数据交互<br>     优点：<br>            可以使得页面不重加载全部内容的情况下加载局部内容，减低数据传输量<br>            避免用户不断刷新或者跳转页面，提高用户体验<br>     缺点：<br>            对搜索引擎不友好<br>            要实现ajax下的前后退功能成本较大<br>            可能造成请求数的增加<br>            跨域问题限制<br>    JSON 是一种轻量级的数据交换格式，ECMA的一个子集<br>     优点：轻量级，易于人的阅读和编写，便于机器（JavaScript）解析，支持复合数据类型（数组，对象，字符串，数字）</p>
<p>8.看下列代码输出为何？解释原因。<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var a;</div><div class="line">alert(typeof a); // undefined</div><div class="line">alert(b); // 报错</div></pre></td></tr></table></figure></p>
<p>解释：Undefined是一个只有一个值的数据类型，这个值就是“undefined”，在使用var声明变量但并未对其赋值进行初始化时，这个变量的值就是undefined。而b由于未声明将报错。注意未申明的变量和声明了未赋值的是不一样的。</p>
<p> 9.看下列代码,输出什么？解释原因。<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var a = null;</div><div class="line">alert(typeof a); //object</div></pre></td></tr></table></figure></p>
<p>解释：null是一个只有一个值的数据类型，这个值就是null。表示一个空指针对象，所以用typeof检测会返回”object”。</p>
<p> 10.看下列代码,输出什么？解释原因。<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var undefined;</div><div class="line">undefined == null; // true  </div><div class="line">1 == true;   // true  </div><div class="line">2 == true;   // false  </div><div class="line">0 == false;  // true</div><div class="line">0 == &apos;&apos;;     // true</div><div class="line">NaN == NaN;  // false</div><div class="line">[] == false; // true</div><div class="line">[] == ![];   // true</div></pre></td></tr></table></figure></p>
<ul>
<li>undefined与null相等，但不恒等（===）</li>
<li>一个是number一个是string时，会尝试将string转换为number</li>
<li>尝试将boolean转换为number，0或1</li>
<li>尝试将Object转换成number或string，取决于另外一个对比量的类型</li>
<li>所以，对于0、空字符串的判断，建议使用 “===” 。“===”会先判断两边的值类型，类型不匹配时为false。<br>那么问题来了，看下面的代码，输出什么，foo的值为什么？  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var foo = &quot;11&quot;+2-&quot;1&quot;;</div><div class="line">console.log(foo);</div><div class="line">console.log(typeof foo);</div></pre></td></tr></table></figure>
</li>
</ul>
<p>执行完后foo的值为111，foo的类型为String。</p>
<p>11.看代码给答案。<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var a = new Object();</div><div class="line">a.value = 1;</div><div class="line">b = a;</div><div class="line">b.value = 2;</div><div class="line">alert(a.value);</div></pre></td></tr></table></figure></p>
<p>答案：2（考察引用数据类型细节）</p>
<p>12.已知数组var stringArray = [“This”, “is”, “Baidu”, “Campus”]，Alert出”This is Baidu Campus”。<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alert(stringArray.join(&quot;&quot;))</div></pre></td></tr></table></figure></p>
<p>13.已知有字符串foo=”get-element-by-id”,写一个function将其转化成驼峰表示法”getElementById”。<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"> function combo(msg)&#123;</div><div class="line">	var arr = msg.split(&quot;-&quot;);</div><div class="line">	for(var i = 1;i&lt;arr.length;i++)&#123;</div><div class="line">		arr[i]=arr[i].charAt(0).toUpperCase()+arr[i].substr(1,arr[i].length)</div><div class="line">	&#125;</div><div class="line">	msg = arr.join(&quot;&quot;)</div><div class="line">	console.log(msg)</div><div class="line">	return msg;</div><div class="line">&#125;</div><div class="line">var foo = &quot;get-elemennt-by-id&quot;</div><div class="line">combo(foo)</div></pre></td></tr></table></figure></p>
<p>14.var numberArray = [3,6,2,4,1,5];<br>1) 实现对该数组的倒排，输出[5,1,4,2,6,3]<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var numberArray = [3,6,2,4,1,5];</div><div class="line">numberArray.reverse()</div><div class="line">alert(numberArray)</div></pre></td></tr></table></figure></p>
<p>2) 实现对该数组的降序排列，输出[6,5,4,3,2,1]<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var numberArray = [3,6,2,4,1,5];</div><div class="line">numberArray.sort(function (a,b) &#123;</div><div class="line">return b-a</div><div class="line">&#125;)</div><div class="line">alert(numberArray)</div></pre></td></tr></table></figure></p>
<p>15.输出今天的日期，以YYYY-MM-DD的方式，比如今天是2014年9月26日，则输出2014-09-26<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var d = new Date();</div><div class="line">var year = d.getFullYear();</div><div class="line">var month = d.getMonth() + 1;</div><div class="line">var day = d.getDate();</div><div class="line">month = month&lt;10? &quot;0&quot;+month : month;</div><div class="line">day = day &lt; 10? &quot;0&quot;+day : day;</div><div class="line">alert(year + &quot;-&quot; + month + &quot;-&quot; + day )</div></pre></td></tr></table></figure></p>
<p>16.将字符串”<tr><td>{$id}</td><td>{$name}</td></tr>”中的{$id}替换成10，{$name}替换成Tony （使用正则表达式）<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alert( &quot; &lt;tr&gt;&lt;td&gt;&#123;$id&#125;&lt;/td&gt;&lt;td&gt;&#123;$id&#125;_&#123;$name&#125;&lt;/td&gt;&lt;/tr&gt;&quot;.replace(/&#123;\$id&#125;/g,&apos;10&apos;).replace(/&#123;\$name&#125;/g,&apos;tony&apos;))</div></pre></td></tr></table></figure></p>
<p>17.为了保证页面输出安全，我们经常需要对一些特殊的字符进行转义，请写一个函数escapeHtml，将&lt;, &gt;, &amp;, “进行转义<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">    function escapeHtml(str) &#123;</div><div class="line">	return str.replace(/[&lt;&gt;&quot;&amp;]/g, function(match) &#123;</div><div class="line">		switch (match) &#123;</div><div class="line">			case &quot;&lt;&quot;:</div><div class="line">			return &quot;&amp;lt;&quot;;</div><div class="line">			case &quot;&gt;&quot;:</div><div class="line">			return &quot;&amp;gt;&quot;;</div><div class="line">			case &quot;&amp;&quot;:</div><div class="line">			return &quot;&amp;amp;&quot;;</div><div class="line">			case &quot;\&quot;&quot;:</div><div class="line">			return &quot;&amp;quot;&quot;;</div><div class="line">			&#125;</div><div class="line">			&#125;);</div><div class="line">			&#125;</div><div class="line">alert(escapeHtml(&quot;\&quot;&quot;))</div></pre></td></tr></table></figure></p>
<p>18.foo = foo||bar ，这行代码是什么意思？为什么要这样写？<br>    if(!foo){foo=bar}<br>    短路表达式：作为”&amp;&amp;”和”||”操作符的操作数表达式，这些表达式在进行求值时，只要最终的结果已经可以确定是真或假，求值过程便告终止，这称之为短路求值。</p>
<p>19.用js实现随机选取10–100之间的10个数字，存入一个数组，并排序。<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var iArray=[];</div><div class="line">  function getRandom(iStart,iEnd)&#123;</div><div class="line">      var iChoice = iEnd - iStart + 1;</div><div class="line">      return Math.floor(Math.random()*iChoice + iStart)</div><div class="line">  &#125;</div><div class="line">  for(var i = 0;i&lt;10;i++)&#123;</div><div class="line">      iArray.push(getRandom(10,100))</div><div class="line">  &#125;</div><div class="line"> alert(iArray.sort())</div></pre></td></tr></table></figure></p>
<p>20.把两个数组合并，并删除第二个元素。<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var arrayA = [&apos;l&apos;,&apos;a&apos;,&apos;n&apos;,&apos;d&apos;,&apos;a&apos;]</div><div class="line">   var arrayB = [&apos;l&apos;,&apos;i&apos;,&apos;a&apos;,&apos;n&apos;,&apos;g&apos;]</div><div class="line">   var arrayC = arrayA.concat(arrayB)</div><div class="line">   arrayC.splice(1,1)</div><div class="line">   alert(arrayC)</div></pre></td></tr></table></figure></p>
<p>21.怎样添加、移除、移动、复制、创建和查找节点<br>1）创建新节点</p>
<p>createDocumentFragment()    //创建一个DOM片段</p>
<p>createElement()   //创建一个具体的元素</p>
<p>createTextNode()   //创建一个文本节点</p>
<p>2）添加、移除、替换、插入</p>
<p>appendChild()      //添加</p>
<p>removeChild()      //移除</p>
<p>replaceChild()      //替换</p>
<p>insertBefore()      //插入</p>
<p>3）查找</p>
<p>getElementsByTagName()    //通过标签名称</p>
<p>getElementsByName()     //通过元素的Name属性的值</p>
<p>getElementById()        //通过元素Id，唯一性</p>
<p>22.有这样一个URL：<a href="http://item.taobao.com/item.htm?a=1&amp;b=2&amp;c=&amp;d=xxx&amp;e，请写一段JS程序提取URL中的各个GET参数(参数名和参数个数不确定)，将其按key-value形式返回到一个json结构中，如{a:’1′" target="_blank" rel="external">http://item.taobao.com/item.htm?a=1&amp;b=2&amp;c=&amp;d=xxx&amp;e，请写一段JS程序提取URL中的各个GET参数(参数名和参数个数不确定)，将其按key-value形式返回到一个json结构中，如{a:’1′</a>, b:’2′, c:”, d:’xxx’, e:undefined}。<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function serilizeUrl(url)&#123;</div><div class="line">       var result = &#123;&#125;;</div><div class="line">       url = url.split(&apos;?&apos;)[1];</div><div class="line">       var map = url.split(&quot;&amp;&quot;);</div><div class="line">       for(var i = 0 ; i &lt; map.length ; i++)&#123;</div><div class="line">           result [map[i].split(&quot;=&quot;)[0]] = map[i].split(&quot;=&quot;)[1]</div><div class="line">       &#125;</div><div class="line">       console.log(result)</div><div class="line">       return result;</div><div class="line">   &#125;</div><div class="line">   serilizeUrl(&apos;http://item.taobao.com/item.htm?a=1&amp;b=2&amp;c=&amp;d=xxx&amp;e=undefined&apos;)</div></pre></td></tr></table></figure></p>
<p>23.清空字符串前后的空格<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">if(!String.prototype.trim())&#123;</div><div class="line">       String.prototype.trim=function()&#123;</div><div class="line">           return this.replace(/^\s+/,&quot;&quot;).replace(/\s+/,&quot;&quot;)</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line">   var str = &quot;  \t\n test tirm  &quot;.trim();</div><div class="line">   alert(str)</div></pre></td></tr></table></figure></p>
<p>24.js实现全选/全不选 反选</p>
<pre><code>hmtl部分
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; id=&quot;items&quot; onclick=&quot;chooseAll()&quot;/&gt; 全选/全不选</div><div class="line">     &lt;input type=&quot;checkbox&quot; id=&quot;items&quot; onclick=&quot;choose()&quot;/&gt; 反选&lt;br/&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; value=&quot;1&quot; name=&quot;items&quot;&gt;&lt;br/&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; value=&quot;2&quot; name=&quot;items&quot;&gt;&lt;br/&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; value=&quot;3&quot; name=&quot;items&quot;&gt; &lt;br/&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; value=&quot;4&quot; name=&quot;items&quot;&gt; &lt;br/&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; value=&quot;5&quot; name=&quot;items&quot;&gt; &lt;br/&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; value=&quot;6&quot; name=&quot;items&quot;&gt; &lt;br/&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; value=&quot;7&quot; name=&quot;items&quot;&gt; &lt;br/&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; value=&quot;8&quot; name=&quot;items&quot;&gt; &lt;br/&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; value=&quot;9&quot; name=&quot;items&quot;&gt; &lt;br/&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; value=&quot;10&quot; name=&quot;items&quot;&gt; &lt;br/&gt;</div><div class="line">     &lt;input type=&quot;checkbox&quot; value=&quot;11&quot; name=&quot;items&quot;&gt; &lt;br/&gt;</div><div class="line"> &lt;/form&gt;</div></pre></td></tr></table></figure>

js部分

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">     var items = document.getElementsByName(&apos;items&apos;);</div><div class="line">     var iskey = true;</div><div class="line">     var isKeyAll = true;</div><div class="line">     function  chooseAll()&#123;</div><div class="line">         if(isKeyAll)&#123;</div><div class="line">             for(var i = 0 ; i &lt; items.length;i++)&#123;</div><div class="line">                 items[i].checked = true;</div><div class="line">             &#125;</div><div class="line">             isKeyAll = false;</div><div class="line">         &#125;else&#123;</div><div class="line">             for(var i = 0 ; i &lt; items.length;i++)&#123;</div><div class="line">                 items[i].checked = false;</div><div class="line">             &#125;</div><div class="line">             isKeyAll = true;</div><div class="line">         &#125;</div><div class="line">     &#125;</div><div class="line">     function choose()&#123;</div><div class="line">         if(iskey)&#123;</div><div class="line">             for(var i = 0 ;i &lt; items.length; i ++)&#123;</div><div class="line">                 if(items[i].checked == false)&#123;</div><div class="line">                     items[i].checked = true</div><div class="line">                 &#125;else&#123;</div><div class="line">                     items[i].checked = false</div><div class="line">                 &#125;</div><div class="line">             &#125;</div><div class="line">             iskey = false;</div><div class="line">         &#125;else&#123;</div><div class="line">             for(var i = 0 ;i &lt; items.length; i ++)&#123;</div><div class="line">                 if(items[i].checked == true)&#123;</div><div class="line">                     items[i].checked = false;</div><div class="line">                 &#125;else&#123;</div><div class="line">                     items[i].checked = true;</div><div class="line">                 &#125;</div><div class="line">		</div><div class="line">             &#125;</div><div class="line">             iskey = true;</div><div class="line">         &#125;</div><div class="line">		</div><div class="line">     &#125;</div><div class="line"> &lt;/script&gt;</div></pre></td></tr></table></figure>
</code></pre><p>25.数组去重<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    Array.prototype.unique=function()&#123;</div><div class="line">        var n = []</div><div class="line">        for(var i = 0 ;i &lt; this.length;i++)&#123;</div><div class="line">            if(n.indexOf(this[i])==-1)&#123;</div><div class="line">                n.push(this[i])</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return n;</div><div class="line">    &#125;</div><div class="line">    var a = new Array(1,1,2,3,4,3)</div><div class="line">    alert(a.unique())</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;初级Javascript：&quot;&gt;&lt;a href=&quot;#初级Javascript：&quot; class=&quot;headerlink&quot; title=&quot;初级Javascript：&quot;&gt;&lt;/a&gt;初级Javascript：&lt;/h2&gt;&lt;p&gt;1.JavaScript是一种什么样的语言，它有哪些特点？&lt;br&gt;  没有标准答案。&lt;br&gt;  示例答案：JavaScript 是一种脚本语言，官方名称为 ECMAScript（因定义语言的标准为 ECMA-262）。JS 的主要特点：1. 语法类似于常见的高级语言，如 C 和 Java；2. 脚本语言，不需要编译就可以由解释器直接运行；3. 变量松散定义，属于弱类型语言；4. 面向对象的。&lt;br&gt;JS 最初是为网页设计而开发的，现在也是 Web 开发的重要语言。它支持对浏览器（浏览器对象模型，BOM）和 HTML 文档（文档对象模型，DOM）进行操作，而使网页呈现动态的交互特性。&lt;br&gt;严格的说，JS 只是 ECMAScript 的一种实现，是 ECMAScript 和 BOM、DOM 组成的一种 Web 开发技术。&lt;/p&gt;
&lt;p&gt;2.JavaScript的数据类型都有什么？&lt;br&gt;    基本数据类型：String,boolean,Number,Undefined, Null&lt;br&gt;    引用数据类型：Object(Array,Date,RegExp,Function)&lt;br&gt;    那么问题来了，如何判断某变量是否为数组数据类型？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方法一.判断其是否具有“数组性质”，如slice()方法。可自己给该变量定义slice方法，故有时会失效&lt;/li&gt;
&lt;li&gt;方法二.obj instanceof Array 在某些IE版本中不正确&lt;/li&gt;
&lt;li&gt;方法三.方法一二皆有漏洞，在ECMA Script5中定义了新方法Array.isArray(), 保证其兼容性，最好的方法如下：  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;if(typeof Array.isArray===&amp;quot;undefined&amp;quot;) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Array.isArray = function(arg)&amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		return Object.prototype.toString.call(arg)===&amp;quot;[object Array]&amp;quot; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>个人简历</title>
    <link href="http://yoursite.com/2016/11/20/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/"/>
    <id>http://yoursite.com/2016/11/20/个人简历/</id>
    <published>2016-11-20T10:07:08.000Z</published>
    <updated>2016-12-12T15:05:25.666Z</updated>
    
    <content type="html"><![CDATA[<h3 id="个人资料："><a href="#个人资料：" class="headerlink" title="个人资料："></a>个人资料：</h3><pre><code>姓名：梁晶                 出生日期：1995年8月24日

联系电话：18403553952      邮箱：18403553952@163.com

居住地：杭州-西湖区

求职意向：web前端工程师
</code></pre><h3 id="教育背景："><a href="#教育背景：" class="headerlink" title="教育背景："></a>教育背景：</h3><pre><code>2012.09--2016.07  长治学院  计算机科学与技术   本科
                  主修课程：高等语言程序设计、数据结构、Java程序设计语言、数据库原理及应用、软件工程、网站设计及
                           开发、信息系统开发、操作系统、计算机网络、计算机组成原理等
</code></pre><h3 id="项目经验："><a href="#项目经验：" class="headerlink" title="项目经验："></a>项目经验：</h3><pre><code>2016.11-2016.12   单页面网页开发               
                  开发环境： HBuilder
                  使用技术:  Angular.js
                  项目描述： 使用Angular开发了单页面的暴走漫画，实现了发表带表情的评论，表单验证，存取cookies,
                            点赞等基本功能.

2016.10-2016.11   框架网页开发                 
                  开发环境： HBuilder
                  使用技术:  bootstrap Amaze UI Materialize
                  项目描述： 使用Materialize开发了响应式的vivo首页、Funtouch OS二级页面以及360杀毒首页；使用
                            Amaze UI开发了响应式的微博首页以及二级页面，同时开发了360手机卫士；使用bootstrap
                            开发了电商后台页面，实现了数据的增删改查  

2016.09-2016.10   响应式网页开发               
                  开发环境： HBuilder
                  使用技术： js jq css3 html5 fullpages
                  项目描述： 使用fullpages 框架配合css3动画开发“keyboard”响应式小组网页，并使用svn实现组员之
                            间的合作。个人开发了“有道词典”,使用到的技术有css3动画和html5中的canvas,并实现模
                            拟翻译功能，配合使用的插件有iscroll和Swiper
</code></pre><a id="more"></a>
<pre><code>2016.08 -2016.09  网页开发
                  开发环境：HBuilder
                  使用技术：js  css  html
                  项目描述：使用js,css,html等基本语言开发一些网页，曾做过的网页有自己设计的“小黄人旗舰店”一级页
                           面和二级页面，并实现二级页面上的选择商品属性功能，其他网页有华为、华硕、开心消消乐。

2016.07-2015.08   网页设计
                  开发环境：windows 7
                  使用技术：ps ai
                  项目描述：使用ps , ai 设计“小黄人旗舰店”一级和二级页面，以及App界面
</code></pre><h3 id="奖励情况："><a href="#奖励情况：" class="headerlink" title="奖励情况："></a>奖励情况：</h3><pre><code>2014.10           被评为“三好学生”
2013-2015         连续两次获得三等奖学金
</code></pre><h3 id="个人技能："><a href="#个人技能：" class="headerlink" title="个人技能："></a>个人技能：</h3><pre><code>熟练掌握JavaScript, jQuery , css3, html5等语言开发网页
熟练掌握Bootstrap，AmazeUI , Materialize等框架开发响应式网页
熟练掌握fullpage , angular.js 等框架开发单页面网页
熟练掌握sass,less等CSS预处理器。
熟练掌握Ajax的异步传输机制，能够很好的与后台进行数据交互
熟悉ps , ai 等软件设计网页以及APP界面
熟悉 SVN,Git等版本控制工具，并用Github配合Hexo搭建了自己的博客。
</code></pre><h3 id="自我评价："><a href="#自我评价：" class="headerlink" title="自我评价："></a>自我评价：</h3><pre><code>具有较强的进取心、责任感、务实精神，团队合作能力和沟通能力。
善于适应新环境，学习新知识，发现并总结新知识的内在规律。
对工作充满热情与活力，热衷于IT行业。
</code></pre><h3 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h3><p>360杀毒  <a href="https://llandaa.github.io/360kill-virus/360" target="_blank" rel="external">https://llandaa.github.io/360kill-virus/360</a><br>AUSU <a href="https://llandaa.github.io/ASUS/index" target="_blank" rel="external">https://llandaa.github.io/ASUS/index</a><br>开心消消乐 <a href="https://llandaa.github.io/fun-fest/index" target="_blank" rel="external">https://llandaa.github.io/fun-fest/index</a><br>华为 <a href="https://llandaa.github.io/huawei/index" target="_blank" rel="external">https://llandaa.github.io/huawei/index</a><br>微博 <a href="https://llandaa.github.io/weibo/weibo" target="_blank" rel="external">https://llandaa.github.io/weibo/weibo</a><br>微博视频页 <a href="https://llandaa.github.io/weibo-video/weibo-video" target="_blank" rel="external">https://llandaa.github.io/weibo-video/weibo-video</a><br>vivo <a href="https://llandaa.github.io/vivo/vivo" target="_blank" rel="external">https://llandaa.github.io/vivo/vivo</a><br>vivo-fun <a href="https://llandaa.github.io/vivo-fun/vivo-fun" target="_blank" rel="external">https://llandaa.github.io/vivo-fun/vivo-fun</a><br>电商后台管理 <a href="https://llandaa.github.io/shop-management/shopping-management" target="_blank" rel="external">https://llandaa.github.io/shop-management/shopping-management</a><br>小黄人旗舰店 <a href="https://llandaa.github.io/MINIONS-ONE/index" target="_blank" rel="external">https://llandaa.github.io/MINIONS-ONE/index</a><br>小黄人旗舰店商品详情页 <a href="https://llandaa.github.io/MINIONS-TWO/index" target="_blank" rel="external">https://llandaa.github.io/MINIONS-TWO/index</a><br>小组介绍KeyBoard <a href="https://llandaa.github.io/keyboard/index" target="_blank" rel="external">https://llandaa.github.io/keyboard/index</a><br>有道词典APP <a href="https://llandaa.github.io/youdao-dictionary/dictionary" target="_blank" rel="external">https://llandaa.github.io/youdao-dictionary/dictionary</a><br>360手机卫士APP <a href="https://llandaa.github.io/360phone/360safe" target="_blank" rel="external">https://llandaa.github.io/360phone/360safe</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;个人资料：&quot;&gt;&lt;a href=&quot;#个人资料：&quot; class=&quot;headerlink&quot; title=&quot;个人资料：&quot;&gt;&lt;/a&gt;个人资料：&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;姓名：梁晶                 出生日期：1995年8月24日

联系电话：18403553952      邮箱：18403553952@163.com

居住地：杭州-西湖区

求职意向：web前端工程师
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;教育背景：&quot;&gt;&lt;a href=&quot;#教育背景：&quot; class=&quot;headerlink&quot; title=&quot;教育背景：&quot;&gt;&lt;/a&gt;教育背景：&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;2012.09--2016.07  长治学院  计算机科学与技术   本科
                  主修课程：高等语言程序设计、数据结构、Java程序设计语言、数据库原理及应用、软件工程、网站设计及
                           开发、信息系统开发、操作系统、计算机网络、计算机组成原理等
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;项目经验：&quot;&gt;&lt;a href=&quot;#项目经验：&quot; class=&quot;headerlink&quot; title=&quot;项目经验：&quot;&gt;&lt;/a&gt;项目经验：&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;2016.11-2016.12   单页面网页开发               
                  开发环境： HBuilder
                  使用技术:  Angular.js
                  项目描述： 使用Angular开发了单页面的暴走漫画，实现了发表带表情的评论，表单验证，存取cookies,
                            点赞等基本功能.

2016.10-2016.11   框架网页开发                 
                  开发环境： HBuilder
                  使用技术:  bootstrap Amaze UI Materialize
                  项目描述： 使用Materialize开发了响应式的vivo首页、Funtouch OS二级页面以及360杀毒首页；使用
                            Amaze UI开发了响应式的微博首页以及二级页面，同时开发了360手机卫士；使用bootstrap
                            开发了电商后台页面，实现了数据的增删改查  

2016.09-2016.10   响应式网页开发               
                  开发环境： HBuilder
                  使用技术： js jq css3 html5 fullpages
                  项目描述： 使用fullpages 框架配合css3动画开发“keyboard”响应式小组网页，并使用svn实现组员之
                            间的合作。个人开发了“有道词典”,使用到的技术有css3动画和html5中的canvas,并实现模
                            拟翻译功能，配合使用的插件有iscroll和Swiper
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>再来一次</title>
    <link href="http://yoursite.com/2016/10/11/%E5%86%8D%E6%9D%A5%E4%B8%80%E6%AC%A1/"/>
    <id>http://yoursite.com/2016/10/11/再来一次/</id>
    <published>2016-10-11T13:25:09.000Z</published>
    <updated>2016-10-11T13:25:48.875Z</updated>
    
    <content type="html"><![CDATA[<h3 id="不行就再来一次，没什么大不了"><a href="#不行就再来一次，没什么大不了" class="headerlink" title="不行就再来一次，没什么大不了"></a>不行就再来一次，没什么大不了</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;不行就再来一次，没什么大不了&quot;&gt;&lt;a href=&quot;#不行就再来一次，没什么大不了&quot; class=&quot;headerlink&quot; title=&quot;不行就再来一次，没什么大不了&quot;&gt;&lt;/a&gt;不行就再来一次，没什么大不了&lt;/h3&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
